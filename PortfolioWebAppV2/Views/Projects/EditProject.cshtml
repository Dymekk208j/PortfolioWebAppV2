@using PortfolioWebAppV2.Models.ViewModels
@model PortfolioWebAppV2.Models.ViewModels.ProjectViewModel

@{
    Layout = "~/Views/Shared/_AdminPanelLayout.cshtml";
}

@section Header
{
    @Html.Name("Edytuj projekt")
}


@section AdditionalCss
{
    <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/codemirror.css">
    <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/theme/monokai.css">



    <style>
        .iconCard:hover {
            -webkit-box-shadow: -1px 9px 40px -12px #000000 !important;
            -webkit-box-shadow: -1px 9px 40px -12px rgba(0, 0, 0, 0.75) !important;
            -moz-box-shadow: -1px 9px 40px -12px #000000 !important;
            -moz-box-shadow: -1px 9px 40px -12px rgba(0, 0, 0, 0.75) !important;
            box-shadow: -1px 9px 40px -12px #000000 !important;
            box-shadow: -1px 9px 40px -12px rgba(0, 0, 0, 0.75) !important;
        }

            .iconCard:hover .image {
                opacity: 0.3;
            }

            .iconCard:hover .middle {
                opacity: 1;
            }

        .image {
            opacity: 1;
            display: block;
            width: 100%;
            height: auto;
            transition: .5s ease;
            backface-visibility: hidden;
        }

        .middle {
            transition: .5s ease;
            opacity: 0;
            position: absolute;
            top: 50%;
            left: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
            text-align: center;
        }
    </style>
}

@using (Html.BeginForm("Update", "Projects", FormMethod.Post, new { id = "MyForm" }))
{

    <div class="col-12 mt-5">
        <div class="card">

            <div class="card-body">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.ProjectId)

                <p>
                    <a href="#" data-toggle="modal" data-target="#SelectIcon">
                        @if (Model?.Icon != null && Model?.Icon?.ImageId != 0)
                        {
                            <img src="@Html.Raw(Model.Icon.GetLink())" alt="" id="IconImg" />

                        }
                        else
                        {
                            <img src="~/Lib/assets/images/icon/selectIconPlaceHolder.png" alt="" id="IconImg" />
                        }
                    </a>

                    @Html.HiddenFor(m => m.Icon.ImageId)
                </p>

                <p class="mt-2">
                    @Html.LabelFor(m => m.Title)
                    @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                </p>

                <p class="mt-2">
                    @Html.LabelFor(m => m.GitHubLink)
                    @Html.EditorFor(m => m.GitHubLink, new { htmlAttributes = new { @class = "form-control" } })
                </p>

                <p class="mt-2">
                    @Html.LabelFor(m => m.ShortDescription)
                    <div id="TextBoxShortDescription"></div>
                    @Html.HiddenFor(m => m.ShortDescription)
                </p>

                <p class="mt-2">
                    @Html.LabelFor(m => m.FullDescription)
                    <div id="TextBoxFullDescription"> </div>
                    @Html.HiddenFor(m => m.FullDescription)

                </p>

                <p class="mt-2">
                    @Html.LabelFor(m => m.DateTimeCreated)
                    <input class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" id="DateTimeCreated" name="DateTimeCreated">
                </p>

                <p class="mt-2">
                    @Html.CheckBoxFor(m => m.Commercial)
                    @Html.LabelFor(m => m.Commercial)
                </p>

                <p class="mt-2">
                    @Html.CheckBoxFor(m => m.ShowInCv)
                    @Html.LabelFor(m => m.ShowInCv)
                </p>

                <p class="mt-2">
                    @Html.CheckBoxFor(m => m.TempProject, new { id = "TempProject" })
                    @Html.LabelFor(m => m.TempProject)
                </p>

                <div class="float-left">
                    <button type="button" id="TechnologiesPanelButton" class="btn btn-sm btn-secondary" data-toggle="modal" data-target="#TechnologiesPanel"><i class="ti-panel mr-2"></i>Wybierz technologie</button>
                </div>

                <div class="float-right">
                    @{
                        if (Model != null)
                        {
                            <button type="button" id="DeleteButton" onclick="location.href = '@Url.Action("RemoveProject", "Projects", new {projectId = Model.ProjectId, temporary = Model.TempProject})';" class="btn btn-sm btn-danger"><i class="ti-trash mr-2"></i>Usuń projekt</button>

                            <a class="btn btn-sm btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="ti-file mr-2"></i>Operacje XML
                            </a>

                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item" href="@Url.Action("PreviewXmlFile", "Projects", new { projectId = Model.ProjectId})">Podgląd</a>
                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#UploadXmlFile">Importuj</a>
                                <a class="dropdown-item" href="@Url.Action("ExportXmlFile", "Projects", new {projectId = Model.ProjectId})">Pobierz</a>
                            </div>

                            <button type="submit" id="SaveButton" class="btn btn-sm btn-success"><i class="ti-save mr-2"></i>Zapisz zmiany</button>
                            if (Model.TempProject)
                            {
                                <button type="button" id="CreateButton" onclick="AddToPortfolio()" class="btn btn-sm btn-primary"><i class="ti-cloud-up mr-2"></i>Dodaj do portfolio</button>
                            }
                        }
                    }

                </div>

            </div>
        </div>
    </div>

    @Html.Action("GetTechnologiesPanel", "Projects")
}
@Html.Action("GetIconsSelectorPanel", "Projects")

@using (
    Html.BeginForm("ImportXmlFile", "Projects", FormMethod.Post,
        new { enctype = "multipart/form-data", onsubmit = "return confirm('Czy na pewno chcesz przesłać plik?');" }))
{
    <div class="modal fade" id="UploadXmlFile" tabindex="-1" role="dialog" aria-labelledby="UploadXmlFileLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="UploadXmlFileLabel">Prześlij plik xml</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.TextBox("file", "", new { type = "file" }) <br />
                    @Html.HiddenFor(m => m.ProjectId)
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Anuluj</button>
                    <button type="submit" class="btn btn-sm btn-primary">Wyślij</button>
                </div>
            </div>
        </div>
    </div>
}






@section AdditionalJs
{
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/codemirror.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/mode/xml/xml.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/formatting.js"></script>
    <link href="~/Content/summernote/summernote-bs4.css" rel="stylesheet" />
    <script src="~/Scripts/summernote/summernote-bs4.js"></script>

    <script>
        function SelectCheckBox(x) {
            var name = "@Html.Raw("#tech")" + x;
            $(name).click();
        }
    </script>
    
    @if (Model != null)
    {
        foreach (TechnologyViewModel m in Model.Technologies)
        {
            <script>
                SelectCheckBox(@Html.Raw(m.TechnologyId))
            </script>
        }
    }
    <script type="text/javascript">
        $('#TextBoxShortDescription').summernote({
            height: 100,
            codemirror: {
                theme: 'monokai'
            }
        });

        $('#TextBoxFullDescription').summernote({
            height: 250,
            codemirror: {
                theme: 'monokai'
            }
        });

        function htmlDecode(input){
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
        }

        var FullDesc = htmlDecode('@(Model?.FullDescription ?? "")');
        var ShortDesc = htmlDecode('@(Model?.ShortDescription ?? "")');

        $('#TextBoxFullDescription').summernote('code', FullDesc);
        $('#TextBoxShortDescription').summernote('code', ShortDesc);
    </script>

    <script>
        function selectIcon(ids) {

            $('#Icon_ImageId').val(ids);
            $.get('@Url.Action("GetIconLink", "Projects")', { id: ids }, function (data) {
                $("#IconImg").attr("src", data);
            });

        }

        function AddToPortfolio() {
            $('#TempProject').prop('checked', false);
            $('#MyForm').submit();
        }

        $('#MyForm').submit(function () {

            var shortDesc = $('#TextBoxShortDescription').summernote('code');
            $('#ShortDescription').val(shortDesc);
            console.log(shortDesc);

            var fullDesc = $('#TextBoxFullDescription').summernote('code');
            $('#FullDescription').val(fullDesc);
            console.log(fullDesc);

        });
    </script>
}

